/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
    behaviors {
        #include "macros.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    macros {
        undomacro: undomacro {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp Z>,
                <&macro_release>,
                <&kp LGUI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
   &kp EQUAL  &kp EXCLAMATION  &kp AT_SIGN    &kp HASH   &kp DOLLAR  &kp PERCENT             &none                                                                                              &mo 3  &kp CARET     &kp AMPERSAND    &kp STAR  &kp LEFT_PARENTHESIS     &kp RIGHT_PARENTHESIS     &kp MINUS
     &kp TAB            &kp Q        &kp W     &lt 1 E      &lt 2 R        &kp T  &kp LEFT_BRACKET                                                                                  &kp RIGHT_BRACKET      &kp Y             &kp U       &kp I                 &kp O                     &kp P      &kp BSLH
     &kp ESC     &hm LSHIFT A  &hm LCTRL S  &hm LALT D   &hm LGUI F        &kp G    &kp LEFT_BRACE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &none  &none        &kp C_PREV  &kp C_NEXT    &kp RIGHT_BRACE      &kp H        &hm LGUI J  &hm LALT K           &hm LCTRL L  &hm LEFT_SHIFT SEMICOLON       &kp SQT
&kp CAPSLOCK            &kp Z        &kp X       &kp C        &kp V        &kp B             &none              &none            &none  &none  &none             &none       &none              &none      &kp N             &kp M   &kp COMMA               &kp DOT                  &kp FSLH  &kp CAPSLOCK
       &none            &none        &none       &none  &lt 4 GRAVE                      &kp ENTER         &undomacro       &kp C_MUTE                &kp C_PLAY_PAUSE    &kp BSPC          &kp SPACE             &kp SINGLE_QUOTE       &none                 &none                     &none         &none
            >;
        };

        layer_keypad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans    &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
&trans  &trans  &trans  &trans  &trans  &trans   &none                                                   &none  &trans  &kp NUMBER_7  &kp NUMBER_8         &kp N9     &kp KP_MINUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans   &none  &trans  &trans  &trans  &trans   &none  &trans   &none  &trans  &kp NUMBER_4        &kp N5         &kp N6      &kp KP_PLUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans   &none   &none  &trans   &none   &none  &trans   &none   &none  &trans  &kp NUMBER_1  &kp NUMBER_2   &kp NUMBER_3     &kp KP_ENTER  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans                  &trans  &trans  &kp N0          &kp NUMBER_0  &kp NUMBER_0     &kp KP_DOT           &trans  &trans
            >;
        };

        layer_fn {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                 &trans  &trans  &kp F10  &kp F11  &kp F12  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans   &none                                                  &none  &trans   &kp F7   &kp F8   &kp F9  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans   &none  &trans  &trans  &none  &trans  &trans  &trans   &none  &trans   &kp F4   &kp F5   &kp F6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans   &none   &none  &trans  &none   &none  &trans   &none   &none  &trans   &kp F1   &kp F2   &kp F3  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans                 &trans  &trans  &trans           &trans   &trans   &trans  &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none                                                                           &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&none         &none         &none         &none         &none         &none             &bootloader                                                                      &bootloader         &none         &none         &none         &none         &none  &none
&none         &none         &none         &none         &none         &none  &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR  &none  &none  &none  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none  &none
&none         &none         &none         &none         &none         &none                   &none       &none  &none  &none  &none       &none       &none                   &none         &none         &none         &none         &none         &none  &none
&none         &none         &none    &bl BL_INC    &bl BL_DEC                       &rgb_ug RGB_TOG  &bl BL_TOG  &none                     &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none  &none
            >;
        };

        LAYER_ARROW {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans          &trans          &trans           &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans          &trans    &kp UP_ARROW           &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans          &trans           &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans                  &trans  &trans  &trans                  &trans          &trans           &trans  &trans  &trans
            >;
        };
    };
};
